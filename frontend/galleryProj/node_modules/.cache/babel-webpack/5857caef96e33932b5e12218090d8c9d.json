{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { HomePage } from '../home/home.page';\nimport { ImageUploadPage } from '../image-upload/image-upload.page';\nimport { ImageViewPage } from '../image-view/image-view.page';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic/angular\";\nimport * as i2 from \"@angular/common\";\n\nfunction GalleryPage_ion_col_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"ion-col\", 4);\n    i0.ɵɵlistener(\"click\", function GalleryPage_ion_col_13_Template_ion_col_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const i_r2 = restoredCtx.index;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return ctx_r3.openPreview(i_r2);\n    });\n    i0.ɵɵelementStart(1, \"div\", 5);\n    i0.ɵɵelement(2, \"img\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const img_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"src\", img_r1, i0.ɵɵsanitizeUrl);\n  }\n}\n\nlet Index = 1;\nconst imageId = document.getElementById(\"image\");\nexport let GalleryPage = /*#__PURE__*/(() => {\n  class GalleryPage {\n    constructor(modalController) {\n      this.modalController = modalController;\n      this.images = [];\n      this.image = \"\";\n    }\n\n    ngOnInit() {\n      // index.length = 0;\n      this.galleryLoad(); // console.log(this.imagesPath);\n    }\n\n    galleryLoad() {\n      for (var i = 1; i < 14; i++) {\n        this.images.push('../assets/images/' + i + '.JPG');\n      }\n\n      for (var i = 14; i < 15; i++) {\n        this.images.push('../assets/images/' + i + '.png');\n      }\n\n      for (var j = 0; j < this.images.length; j++) {\n        this.image = this.images[j];\n        console.log(this.image);\n        return this.image;\n      }\n    }\n\n    openPreview(index) {\n      this.modalController.create({\n        component: ImageViewPage,\n        cssClass: 'modal-fullscreen',\n        componentProps: {\n          images: this.images,\n          index: index\n        }\n      }).then(modal => modal.present());\n    }\n\n    back() {\n      this.modalController.dismiss();\n    }\n\n    home() {\n      return __awaiter(this, void 0, void 0, function* () {\n        const modal = yield this.modalController.create({\n          component: HomePage,\n          cssClass: 'modal-fullscreen',\n          id: 'HomePage'\n        });\n        return yield modal.present();\n      });\n    }\n\n    upload() {\n      return __awaiter(this, void 0, void 0, function* () {\n        const modal = yield this.modalController.create({\n          component: ImageUploadPage,\n          cssClass: 'modal-fullscreen',\n          id: 'Image-uploadPage'\n        });\n        return yield modal.present();\n      });\n    }\n\n  }\n\n  GalleryPage.ɵfac = function GalleryPage_Factory(t) {\n    return new (t || GalleryPage)(i0.ɵɵdirectiveInject(i1.ModalController));\n  };\n\n  GalleryPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: GalleryPage,\n    selectors: [[\"app-gallery\"]],\n    decls: 14,\n    vars: 1,\n    consts: [[\"horizontal\", \"end\", \"slot\", \"end\", 3, \"click\"], [\"text-align\", \"center\"], [1, \"grid-colour\"], [\"col-6\", \"\", \"col-md-4\", \"\", \"col-xl-3\", \"\", \"tappable\", \"\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [\"col-6\", \"\", \"col-md-4\", \"\", \"col-xl-3\", \"\", \"tappable\", \"\", 3, \"click\"], [\"zoom\", \"true\", 1, \"image-container\"], [\"id\", \"imageId\", 1, \"img\", 2, \"width\", \"150px\", \"height\", \"150px\", \"border-radius\", \"10px 10px\", \"background-size\", \"cover\", 3, \"src\"]],\n    template: function GalleryPage_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-header\");\n        i0.ɵɵelementStart(1, \"ion-toolbar\");\n        i0.ɵɵelementStart(2, \"ion-title\");\n        i0.ɵɵtext(3, \"Gallery\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"ion-button\", 0);\n        i0.ɵɵlistener(\"click\", function GalleryPage_Template_ion_button_click_4_listener() {\n          return ctx.home();\n        });\n        i0.ɵɵtext(5, \"Home\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"ion-button\", 0);\n        i0.ɵɵlistener(\"click\", function GalleryPage_Template_ion_button_click_6_listener() {\n          return ctx.upload();\n        });\n        i0.ɵɵtext(7, \"Upload\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"ion-button\", 0);\n        i0.ɵɵlistener(\"click\", function GalleryPage_Template_ion_button_click_8_listener() {\n          return ctx.back();\n        });\n        i0.ɵɵtext(9, \"Back\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"ion-content\", 1);\n        i0.ɵɵelementStart(11, \"ion-grid\", 2);\n        i0.ɵɵelementStart(12, \"ion-row\");\n        i0.ɵɵtemplate(13, GalleryPage_ion_col_13_Template, 3, 1, \"ion-col\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"ngForOf\", ctx.images);\n      }\n    },\n    directives: [i1.IonHeader, i1.IonToolbar, i1.IonTitle, i1.IonButton, i1.IonContent, i1.IonGrid, i1.IonRow, i2.NgForOf, i1.IonCol],\n    styles: [\"ion-content[_ngcontent-%COMP%]{--background:#708090}.grid-colour[_ngcontent-%COMP%]{background-color:#708090;height:100%}.img[_ngcontent-%COMP%]:hover{cursor:pointer}.image-container[_ngcontent-%COMP%]{min-height:150px;min-width:170px;border-radius:15px 50px;background-size:cover}\"]\n  });\n  return GalleryPage;\n})();","map":null,"metadata":{},"sourceType":"module"}